# Generated by Django 5.1.5 on 2025-01-20 11:10

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="BattleLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("battle_id", models.CharField(max_length=255, unique=True)),
                ("type", models.CharField(max_length=50)),
                ("timestamp", models.DateTimeField()),
                ("arena", models.CharField(default="Unknown Arena", max_length=100)),
                ("game_mode", models.CharField(default="Unknown Mode", max_length=100)),
                ("player_tag", models.CharField(max_length=255)),
                ("player_name", models.CharField(max_length=255)),
                ("starting_trophies", models.IntegerField(default=0)),
                ("trophy_change", models.IntegerField(default=0)),
                ("crowns", models.IntegerField(default=0)),
                ("king_tower_hp", models.IntegerField(default=0)),
                ("princess_tower_hp", models.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Clan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tag", models.CharField(max_length=50, unique=True)),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                ("badge_id", models.PositiveIntegerField()),
                ("clan_score", models.PositiveIntegerField()),
                ("members_count", models.PositiveIntegerField()),
            ],
            options={
                "verbose_name": "Clan",
                "verbose_name_plural": "Clans",
            },
        ),
        migrations.CreateModel(
            name="ClanWar",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("war_id", models.CharField(max_length=50, unique=True)),
                ("status", models.CharField(max_length=50)),
                ("battle_count", models.PositiveIntegerField()),
                ("wins", models.PositiveIntegerField()),
            ],
            options={
                "verbose_name": "Clan War",
                "verbose_name_plural": "Clan Wars",
            },
        ),
        migrations.CreateModel(
            name="GameMode",
            fields=[
                (
                    "id",
                    models.CharField(
                        max_length=50, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("name", models.CharField(max_length=100)),
            ],
            options={
                "verbose_name": "Game Mode",
                "verbose_name_plural": "Game Modes",
            },
        ),
        migrations.CreateModel(
            name="Leaderboard",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tag", models.CharField(max_length=50, unique=True)),
                ("name", models.CharField(max_length=100)),
                ("clan_score", models.PositiveIntegerField(blank=True, null=True)),
                ("rank", models.PositiveIntegerField()),
            ],
            options={
                "verbose_name": "Leaderboard",
                "verbose_name_plural": "Leaderboards",
            },
        ),
        migrations.CreateModel(
            name="Player",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tag", models.CharField(max_length=50, unique=True)),
                ("name", models.CharField(max_length=100)),
                ("level", models.PositiveIntegerField()),
                ("trophies", models.PositiveIntegerField()),
            ],
            options={
                "verbose_name": "Player",
                "verbose_name_plural": "Players",
            },
        ),
        migrations.CreateModel(
            name="Challenge",
            fields=[
                (
                    "id",
                    models.CharField(
                        max_length=50, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                ("start_time", models.DateTimeField()),
                ("end_time", models.DateTimeField()),
                ("win_mode", models.CharField(blank=True, max_length=50, null=True)),
                ("casual", models.BooleanField(default=False)),
                ("max_losses", models.PositiveIntegerField()),
                ("max_wins", models.PositiveIntegerField()),
                ("icon_url", models.URLField(blank=True, null=True)),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sub_challenges",
                        to="clashroyale.challenge",
                    ),
                ),
                (
                    "game_mode",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="challenges",
                        to="clashroyale.gamemode",
                    ),
                ),
            ],
            options={
                "verbose_name": "Challenge",
                "verbose_name_plural": "Challenges",
                "ordering": ["-start_time"],
            },
        ),
        migrations.CreateModel(
            name="Prize",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("type", models.CharField(blank=True, max_length=50, null=True)),
                ("amount", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "consumable_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "challenge",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="prizes",
                        to="clashroyale.challenge",
                    ),
                ),
            ],
            options={
                "verbose_name": "Prize",
                "verbose_name_plural": "Prizes",
            },
        ),
    ]
