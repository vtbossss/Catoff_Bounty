# Generated by Django 5.1.5 on 2025-01-20 18:19

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("clashroyale", "0003_delete_clanwar"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="battlelog",
            options={
                "ordering": ["-timestamp"],
                "verbose_name": "Battle Log",
                "verbose_name_plural": "Battle Logs",
            },
        ),
        migrations.AlterModelOptions(
            name="gamemode",
            options={
                "ordering": ["name"],
                "verbose_name": "Game Mode",
                "verbose_name_plural": "Game Modes",
            },
        ),
        migrations.AlterField(
            model_name="battlelog",
            name="arena",
            field=models.CharField(
                default="Unknown Arena",
                help_text="Arena where the battle took place",
                max_length=100,
            ),
        ),
        migrations.AlterField(
            model_name="battlelog",
            name="battle_id",
            field=models.CharField(
                db_index=True,
                help_text="Unique identifier for the battle",
                max_length=255,
                unique=True,
            ),
        ),
        migrations.AlterField(
            model_name="battlelog",
            name="crowns",
            field=models.IntegerField(default=0, help_text="Number of crowns earned"),
        ),
        migrations.AlterField(
            model_name="battlelog",
            name="game_mode",
            field=models.CharField(
                default="Unknown Mode",
                help_text="Game mode used in the battle",
                max_length=100,
            ),
        ),
        migrations.AlterField(
            model_name="battlelog",
            name="king_tower_hp",
            field=models.IntegerField(
                default=0, help_text="Remaining HP of the king's tower"
            ),
        ),
        migrations.AlterField(
            model_name="battlelog",
            name="player_name",
            field=models.CharField(
                help_text="Player's name in the battle", max_length=255
            ),
        ),
        migrations.AlterField(
            model_name="battlelog",
            name="player_tag",
            field=models.CharField(
                db_index=True,
                help_text="Player's unique identifier (tag)",
                max_length=255,
            ),
        ),
        migrations.AlterField(
            model_name="battlelog",
            name="princess_tower_hp",
            field=models.JSONField(
                blank=True,
                help_text="Remaining HP of the princess towers (as JSON)",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="battlelog",
            name="starting_trophies",
            field=models.IntegerField(
                default=0, help_text="Starting trophies before the battle"
            ),
        ),
        migrations.AlterField(
            model_name="battlelog",
            name="timestamp",
            field=models.DateTimeField(help_text="Timestamp of the battle"),
        ),
        migrations.AlterField(
            model_name="battlelog",
            name="trophy_change",
            field=models.IntegerField(
                default=0, help_text="Change in trophies after the battle"
            ),
        ),
        migrations.AlterField(
            model_name="battlelog",
            name="type",
            field=models.CharField(help_text="Type of the battle", max_length=50),
        ),
        migrations.AlterField(
            model_name="challenge",
            name="casual",
            field=models.BooleanField(
                default=False, help_text="Indicates if the challenge is casual"
            ),
        ),
        migrations.AlterField(
            model_name="challenge",
            name="description",
            field=models.TextField(
                blank=True, help_text="Description of the challenge", null=True
            ),
        ),
        migrations.AlterField(
            model_name="challenge",
            name="end_time",
            field=models.DateTimeField(
                blank=True, help_text="End time of the challenge", null=True
            ),
        ),
        migrations.AlterField(
            model_name="challenge",
            name="game_mode",
            field=models.ForeignKey(
                help_text="Associated game mode for the challenge",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="challenges",
                to="clashroyale.gamemode",
            ),
        ),
        migrations.AlterField(
            model_name="challenge",
            name="icon_url",
            field=models.URLField(
                blank=True, help_text="URL of the challenge icon", null=True
            ),
        ),
        migrations.AlterField(
            model_name="challenge",
            name="id",
            field=models.CharField(
                help_text="Unique identifier for the challenge",
                max_length=50,
                primary_key=True,
                serialize=False,
                unique=True,
            ),
        ),
        migrations.AlterField(
            model_name="challenge",
            name="max_losses",
            field=models.PositiveIntegerField(
                help_text="Maximum losses allowed in the challenge"
            ),
        ),
        migrations.AlterField(
            model_name="challenge",
            name="max_wins",
            field=models.PositiveIntegerField(
                help_text="Maximum wins allowed in the challenge"
            ),
        ),
        migrations.AlterField(
            model_name="challenge",
            name="name",
            field=models.CharField(help_text="Name of the challenge", max_length=100),
        ),
        migrations.AlterField(
            model_name="challenge",
            name="parent",
            field=models.ForeignKey(
                blank=True,
                help_text="Parent challenge if nested",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="sub_challenges",
                to="clashroyale.challenge",
            ),
        ),
        migrations.AlterField(
            model_name="challenge",
            name="start_time",
            field=models.DateTimeField(
                blank=True, help_text="Start time of the challenge", null=True
            ),
        ),
        migrations.AlterField(
            model_name="challenge",
            name="win_mode",
            field=models.CharField(
                blank=True,
                help_text="Win condition of the challenge",
                max_length=50,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="clan",
            name="badge_id",
            field=models.PositiveIntegerField(
                help_text="Badge ID associated with the clan"
            ),
        ),
        migrations.AlterField(
            model_name="clan",
            name="clan_score",
            field=models.PositiveIntegerField(help_text="Score of the clan"),
        ),
        migrations.AlterField(
            model_name="clan",
            name="description",
            field=models.TextField(
                blank=True, help_text="Description of the clan", null=True
            ),
        ),
        migrations.AlterField(
            model_name="clan",
            name="members_count",
            field=models.PositiveIntegerField(
                help_text="Number of members in the clan"
            ),
        ),
        migrations.AlterField(
            model_name="clan",
            name="name",
            field=models.CharField(help_text="Name of the clan", max_length=100),
        ),
        migrations.AlterField(
            model_name="clan",
            name="tag",
            field=models.CharField(
                db_index=True,
                help_text="Unique identifier for the clan",
                max_length=50,
                unique=True,
            ),
        ),
        migrations.AlterField(
            model_name="gamemode",
            name="id",
            field=models.CharField(
                help_text="Unique identifier for the game mode",
                max_length=50,
                primary_key=True,
                serialize=False,
                unique=True,
            ),
        ),
        migrations.AlterField(
            model_name="gamemode",
            name="name",
            field=models.CharField(help_text="Name of the game mode", max_length=100),
        ),
        migrations.AlterField(
            model_name="leaderboard",
            name="clan_score",
            field=models.PositiveIntegerField(
                blank=True, help_text="Score of the clan (if applicable)", null=True
            ),
        ),
        migrations.AlterField(
            model_name="leaderboard",
            name="name",
            field=models.CharField(
                help_text="Name of the player or clan in the leaderboard",
                max_length=100,
            ),
        ),
        migrations.AlterField(
            model_name="leaderboard",
            name="rank",
            field=models.PositiveIntegerField(
                help_text="Current rank in the leaderboard"
            ),
        ),
        migrations.AlterField(
            model_name="leaderboard",
            name="tag",
            field=models.CharField(
                db_index=True,
                help_text="Unique identifier for the leaderboard entry",
                max_length=50,
                unique=True,
            ),
        ),
        migrations.AlterField(
            model_name="player",
            name="level",
            field=models.PositiveIntegerField(help_text="Player's experience level"),
        ),
        migrations.AlterField(
            model_name="player",
            name="name",
            field=models.CharField(help_text="Player's in-game name", max_length=100),
        ),
        migrations.AlterField(
            model_name="player",
            name="tag",
            field=models.CharField(
                db_index=True,
                help_text="Unique identifier for the player",
                max_length=50,
                unique=True,
            ),
        ),
        migrations.AlterField(
            model_name="player",
            name="trophies",
            field=models.PositiveIntegerField(
                help_text="Number of trophies the player has"
            ),
        ),
        migrations.AlterField(
            model_name="prize",
            name="amount",
            field=models.PositiveIntegerField(
                blank=True, help_text="Amount of the prize", null=True
            ),
        ),
        migrations.AlterField(
            model_name="prize",
            name="challenge",
            field=models.ForeignKey(
                help_text="Associated challenge for the prize",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="prizes",
                to="clashroyale.challenge",
            ),
        ),
        migrations.AlterField(
            model_name="prize",
            name="consumable_name",
            field=models.CharField(
                blank=True,
                help_text="Name of the consumable prize",
                max_length=100,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="prize",
            name="type",
            field=models.CharField(
                blank=True,
                help_text="Type of prize (e.g., consumable)",
                max_length=50,
                null=True,
            ),
        ),
    ]
